---
- name: Base Server Setup
  hosts: all
  remote_user: ubuntu
  become: true
  tasks:
    - name: set timezone to Africa/Lagos
      timezone:
        name: Africa/Lagos
    - name: adding existing user "ubuntu" to group sudo
      user:
        name: "ubuntu"
        groups: sudo
        append: yes
    - name: "Create required directories in for webserver"
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=x,o=x
      with_items:
      - /var/www/html/public
      - /opt/glade/logs
      - /opt/glade/keys
    - name: create default ssl directory
      file:
        path: /opt/glade/ssl
        state: directory
        mode: 0700
    - name: copy ssl files
      become: true 
      copy:
        src: ssl/
        dest: /opt/glade/ssl
        mode: 0600
    - name: resolve apt update issue
      command: 'apt update'
    - name: Set up multiple authorized keys
      ansible.posix.authorized_key:
        user: ubuntu
        state: present
        key: '{{ item }}'
      with_file:
        - public_keys/abuango
    
- name: Set Glade Log Permissions
  hosts: all
  remote_user: ubuntu
  become: true
  tasks:
    - name: Set Glade Log Permissions
      command: "chmod -R 777 /opt/glade/logs"
- name: Setup Apache on sandbox Servers
  hosts: sandbox_servers
  remote_user: ubuntu
  become: true
  vars:
    glade_env: sandbox
  vars_files:
    - vars/apache-grouped.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on testing Servers
  hosts: test_servers
  remote_user: ubuntu
  become: true
  vars:
    glade_env: testing
  vars_files:
    - vars/apache-grouped.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on canary Servers
  hosts: canary_servers
  remote_user: ubuntu
  become: true
  vars:
    glade_env: canary
  vars_files:
    - vars/apache-grouped.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on staging Servers
  hosts: staging_servers
  remote_user: ubuntu
  become: true
  vars:
    glade_env: staging
  vars_files:
    - vars/apache-grouped.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on experiment Servers
  hosts: experiment_servers
  remote_user: ubuntu
  become: true
  vars:
    glade_env: experiment
  vars_files:
    - vars/apache-grouped.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on Pay Servers
  hosts: pay
  remote_user: ubuntu
  become: true
  vars:
    server_name: pay-external-prod-aws.glade.ng
    server_dir: /var/www/html/
  vars_files:
    - vars/apache-prod-frontend.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on Core Servers
  hosts: core
  remote_user: ubuntu
  become: true
  vars:
    server_name: core-external-prod-aws.glade.ng
    server_dir: /var/www/html/public
  vars_files:
    - vars/apache-prod-backend.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on DB Servers
  hosts: db_service
  remote_user: ubuntu
  become: true
  vars:
    server_name: db-external-prod-aws.glade.ng
    server_dir: /var/www/html/public
  vars_files:
    - vars/apache-prod-backend.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on dashboard Servers
  hosts: dashboard
  remote_user: ubuntu
  become: true
  vars:
    frontend_server_name: dashboard.glade.ng
    backend_server_name: dashboard-api.glade.ng
  vars_files:
    - vars/apache-prod-front-back.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on checkout Servers
  hosts: checkout
  remote_user: ubuntu
  become: true
  vars:
    server_name: checkout-external-prod-aws.glade.ng
    server_dir: /var/www/html/public
  vars_files:
    - vars/apache-prod-backend.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on office Servers
  hosts: office
  remote_user: ubuntu
  become: true
  vars:
    frontend_server_name: office.glade.ng
    backend_server_name: office-api.glade.ng
  vars_files:
    - vars/apache-prod-front-back.yml
  roles:
    - { role: geerlingguy.apache }



- name: Setup Apache on qc Servers
  hosts: qc
  remote_user: ubuntu
  become: true
  vars:
    server_name: qc-external-prod-aws.glade.ng
    server_dir: /var/www/html/public
  vars_files:
    - vars/apache-prod-backend.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on webhook Servers
  hosts: webhook
  remote_user: ubuntu
  become: true
  vars:
    server_name: webhoook-external-prod-aws.glade.ng
    server_dir: /var/www/html/public
  vars_files:
    - vars/apache-prod-backend.yml
  roles:
    - { role: geerlingguy.apache }

- name: Setup Apache on mobile Servers
  hosts: mobile
  remote_user: ubuntu
  become: true
  vars:
    server_name: mobile-api-external-prod-aws.glade.ng
    server_dir: /var/www/html/public
  vars_files:
    - vars/apache-prod-backend.yml
  roles:
    - { role: geerlingguy.apache }


- name: Setup Apache on external api Servers
  hosts: external_api
  remote_user: ubuntu
  become: true
  vars:
    server_name: external-api-external-prod-aws.glade.ng
    server_dir: /var/www/html/public
  vars_files:
    - vars/apache-prod-backend.yml
  roles:
    - { role: geerlingguy.apache }

- name: Remove old apache configs
  hosts: all
  remote_user: ubuntu
  become: true
  tasks:
    - name: Remove file (delete file)
      ansible.builtin.file:
        path: '{{ item }}'
        state: absent
      with_items:
        - /etc/apache2/sites-available/000-default.conf
        - /etc/apache2/sites-available/default-ssl.conf

- name: Trigger Apache Restart
  hosts: all
  remote_user: ubuntu
  become: true
  tasks:
    - name: Restart Apache
      command: "systemctl restart apache2"

- name: Purge PHP
  hosts: php-servers
  remote_user: ubuntu
  become: true
  tasks:
    - name: Restart Apache
      command: "apt purge php* -y"

- name: Setup PHP Server
  hosts: php-servers
  remote_user: ubuntu
  become: true
  vars_files:
    - vars/php-prod.yml
  vars:
    php_version: '8.0'
  roles:
    - geerlingguy.php-versions
    - geerlingguy.php

- name: Trigger Apache Restart
  hosts: all
  remote_user: ubuntu
  become: true
  tasks:
    - name: Restart Apache
      command: "systemctl restart apache2"


- name: Trigger Secrets Deployment
  
  hosts: localhost
  vars:
    ansible_connection: local
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
    keys_manager_project: 138
  tasks:
    - name: Trigger Pipelines for Secrets
      command: "curl --request POST --header 'PRIVATE-TOKEN: {{ gitlab_pat }}' 'https://git.glade.ng/api/v4/projects/{{ keys_manager_project }}/pipeline?ref=master'"
      when: trigger_ci  == "1"

- name: Trigger Testing Branch pipelines
  hosts: localhost
  vars:
    ansible_connection: local
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
    gitlab_pat: 
  tasks:
    - name: Trigger Pipelines for testing
      command: "curl --request POST --header 'PRIVATE-TOKEN: {{ gitlab_pat }}' 'https://git.glade.ng/api/v4/projects/{{ item }}/pipeline?ref=testing'"
      with_items:
        - 317 #core
        - 316 #db
        - 345 #webhoook
        - 344 #checkout
        - 322 #dashboard-api
        - 320 #office
        - 328 #office-api
        - 306 #dashboard
        - 315 #external-api
        - 346 #pay-link
      when: trigger_ci  == "1"

- name: Trigger sandbox Branch pipelines
  hosts: localhost
  vars:
    ansible_connection: local
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
    gitlab_pat: 
  tasks:
    - name: Trigger Pipelines for sandbox
      command: "curl --request POST --header 'PRIVATE-TOKEN: {{ gitlab_pat }}' 'https://git.glade.ng/api/v4/projects/{{ item }}/pipeline?ref=sandbox'"
      with_items:
        - 317 #core
        - 316 #db
        - 345 #webhoook
        - 344 #checkout
        - 322 #dashboard-api
        - 320 #office
        - 328 #office-api
        - 306 #dashboard
        - 315 #external-api
        - 346 #pay-link
      when: trigger_ci  == "1"

- name: Trigger staging Branch pipelines
  hosts: localhost
  vars:
    ansible_connection: local
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
    gitlab_pat: 
  tasks:
    - name: Trigger Pipelines for staging
      command: "curl --request POST --header 'PRIVATE-TOKEN: {{ gitlab_pat }}' 'https://git.glade.ng/api/v4/projects/{{ item }}/pipeline?ref=staging'"
      with_items:
        - 317 #core
        - 316 #db
        - 345 #webhoook
        - 344 #checkout
        - 322 #dashboard-api
        - 320 #office
        - 328 #office-api
        - 306 #dashboard
        - 315 #external-api
        - 346 #pay-link
      when: trigger_ci  == "1"

- name: Trigger production Branch pipelines
  hosts: localhost
  vars:
    ansible_connection: local
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
    gitlab_pat: 
  tasks:
    - name: Trigger Pipelines for staging
      command: "curl --request POST --header 'PRIVATE-TOKEN: {{ gitlab_pat }}' 'https://git.glade.ng/api/v4/projects/{{ item }}/pipeline?ref=production'"
      with_items:
        - 317 #core
        - 316 #db
        - 345 #webhoook
        - 344 #checkout
        - 322 #dashboard-api
        - 320 #office
        - 328 #office-api
        - 306 #dashboard
        - 315 #external-api
        - 346 #pay-link
      when: trigger_ci  == "1"


- name: grafana monitoring
  hosts: all
  remote_user: ubuntu
  become: true
  vars:
    loki_server: grafana.glade.ng
    glade_host_name: '{{  inventory_hostname  }}'
    promtail_version: 2.7.1
  tasks:
    - name: install acl package
      ansible.builtin.apt:
        name: acl
        state: present

    - name: create promtail group
      ansible.builtin.group:
        name: promtail
        state: present

    - name: create promtail user
      ansible.builtin.user:
        name: promtail
        groups:
          - promtail
          - systemd-journal
          - adm
        state: present
        system: true

    - name: set facl to allow promtail user to read /var/log contents
      ansible.posix.acl:
        path: /var/log
        entity: promtail
        etype: user
        permissions: rX
        state: present

    - name: make promtail user owner of /tmp/positions.yaml
      ansible.builtin.file:
        path: /tmp/positions.yaml
        owner: promtail
        group: promtail
        state: touch
        mode: 0750
      changed_when: false

    - name: install unzip package
      ansible.builtin.apt:
        name: unzip
        state: present

    - name: check if binary exists
      ansible.builtin.stat:
        path: /usr/bin/promtail-linux-amd64
      register: binary

    - name: check promtail version
      command: "sudo promtail-linux-amd64 --version"
      register: promtail_version_check
      when: binary.stat.exists
      changed_when: false

    - name: install promtail if its not present
      ansible.builtin.unarchive:
        src: "https://github.com/grafana/loki/releases/download/v\
            {{  promtail_version  }}/promtail-linux-amd64.zip"
        dest: /usr/bin/
        remote_src: true
      tags:
        - loki
      when: (not binary.stat.exists)

    - name: template systemd unit file
      ansible.builtin.template:
        src: templates/promtail.service.j2
        dest: /etc/systemd/system/promtail.service
        owner: root
        group: root
        mode: 0755
      tags:
        - loki

    - name: reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: true
      tags:
        - loki

    - name: make directory for promtail config
      ansible.builtin.file:
        path: /etc/promtail
        state: directory
        owner: root
        group: root
        mode: 0644

    - name: template promtail config file
      ansible.builtin.template:
        src: templates/promtail.yml.j2
        dest: /usr/local/bin/config-promtail.yml
        owner: root
        group: root
        mode: 0644

    - name: restart promtail
      become: true
      ansible.builtin.systemd:
        name: promtail
        enabled: true
        state: started
      changed_when: false

    - name: restart promtail
      ansible.builtin.systemd:
        name: promtail
        state: restarted
        enabled: true
